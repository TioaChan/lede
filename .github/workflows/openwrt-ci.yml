#
# This is free software, lisence use MIT.
# 
# Copyright (C) 2019 P3TERX <https://p3terx.com>
# Copyright (C) 2020 KFERMercer <KFER.Mercer@gmail.com>
# 
# <https://github.com/KFERMercer/OpenWrt-CI>
#

name: OpenWrt-CI

on:
  push:
    branches: 
      - master
  # schedule:
  #   - cron: 0 20 * * *
  release:
    types: [published]
    
permissions:
  contents: read

jobs:

  build_openwrt:

    permissions:
      contents: write # for release creation

    name: Build OpenWrt firmware

    runs-on: ubuntu-latest

    if: github.event.repository.owner.id == github.event.sender.id || ! github.event.sender.id

    steps:

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install golang-go ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp nano ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pip libpython3-dev qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean

          # sudo mkdir -p -m 777 /mnt/openwrt/bin /mnt/openwrt/build_dir/host /mnt/openwrt/build_dir/hostpkg /mnt/openwrt/dl /mnt/openwrt/feeds /mnt/openwrt/staging_dir
          # ln -s /mnt/openwrt/bin ./bin
          # mkdir -p ./build_dir
          # ln -s -f /mnt/openwrt/build_dir/host ./build_dir/host
          # ln -s -f /mnt/openwrt/build_dir/hostpkg ./build_dir/hostpkg
          # ln -s /mnt/openwrt/dl ./dl
          # ln -s /mnt/openwrt/feeds ./feeds
          # ln -s /mnt/openwrt/staging_dir ./staging_dir

          df -h

#      - name: Install go-bindata
#        run: |
#          export PATH=$PATH:$(go env GOPATH)/bin
#          go get -u github.com/go-bindata/go-bindata/...
#          echo "go-bindata version:" $(go-bindata -version)

      - name: initial git submodule
        run: |
          git submodule update --init

      - name: Update feeds & remove conflict package
        run: |
          ./scripts/feeds update -a && ./scripts/feeds install -a
          rm -rf feeds/luci/themes/luci-theme-argon
#          sed -i 's/luci-lib-ipkg/luci-base/' ./feeds/istore/luci/luci-app-store/Makefile
          ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: Generate configuration file
        run: |
          rm -f ./.config*
          touch ./.config

          #
          # 在 cat >> .config <<EOF 到 EOF 之间粘贴你的编译配置, 需注意缩进关系
          # 例如:

          cat >> .config <<EOF
          CONFIG_TARGET_x86=y
          CONFIG_TARGET_x86_64=y
          CONFIG_TARGET_x86_64_DEVICE_generic=y
          CONFIG_DEVEL=y
          CONFIG_BIND_ENABLE_DOH=y
          CONFIG_CCACHE=y
          CONFIG_GRUB_TIMEOUT="1"
          CONFIG_KERNEL_CGROUP_DEVICE=y
          CONFIG_KERNEL_CGROUP_FREEZER=y
          CONFIG_KERNEL_CGROUP_NET_PRIO=y
          CONFIG_KERNEL_EXT4_FS_POSIX_ACL=y
          CONFIG_KERNEL_EXT4_FS_SECURITY=y
          CONFIG_KERNEL_FS_POSIX_ACL=y
          CONFIG_KERNEL_NET_CLS_CGROUP=y
          CONFIG_PACKAGE_6in4=y
          CONFIG_PACKAGE_bandwidthd=y
          CONFIG_PACKAGE_bash=y
          CONFIG_PACKAGE_bind-client=y
          CONFIG_PACKAGE_bind-host=y
          CONFIG_PACKAGE_bind-libs=y
          CONFIG_PACKAGE_btrfs-progs=y
          CONFIG_PACKAGE_bzip2=y
          CONFIG_PACKAGE_coreutils=y
          CONFIG_PACKAGE_coreutils-nohup=y
          CONFIG_PACKAGE_ddns-scripts_cloudflare.com-v4=y
          CONFIG_PACKAGE_ddns-scripts_freedns_42_pl=y
          CONFIG_PACKAGE_ddns-scripts_godaddy.com-v1=y
          CONFIG_PACKAGE_ddns-scripts_no-ip_com=y
          CONFIG_PACKAGE_ddns-scripts_nsupdate=y
          CONFIG_PACKAGE_ddns-scripts_route53-v1=y
          CONFIG_PACKAGE_findfs=y
          CONFIG_PACKAGE_hostapd-common=y
          CONFIG_PACKAGE_ip-tiny=y
          CONFIG_PACKAGE_ip6tables=y
          CONFIG_PACKAGE_iptables-mod-conntrack-extra=y
          CONFIG_PACKAGE_iptables-mod-ipopt=y
          CONFIG_PACKAGE_ipv6helper=y
          CONFIG_PACKAGE_iw=y
          CONFIG_PACKAGE_iwinfo=y
          CONFIG_PACKAGE_jansson=y
          CONFIG_PACKAGE_kmod-asn1-encoder=y
          CONFIG_PACKAGE_kmod-br-netfilter=y
          CONFIG_PACKAGE_kmod-cfg80211=y
          CONFIG_PACKAGE_kmod-crypto-rng=y
          CONFIG_PACKAGE_kmod-crypto-sha256=y
          CONFIG_PACKAGE_kmod-dax=y
          CONFIG_PACKAGE_kmod-dm=y
          CONFIG_PACKAGE_kmod-dummy=y
          CONFIG_PACKAGE_kmod-fs-btrfs=y
          CONFIG_PACKAGE_kmod-ikconfig=y
          CONFIG_PACKAGE_kmod-ipt-conntrack-extra=y
          CONFIG_PACKAGE_kmod-ipt-ipopt=y
          CONFIG_PACKAGE_kmod-ipt-nat6=y
          CONFIG_PACKAGE_kmod-iptunnel=y
          CONFIG_PACKAGE_kmod-keys-encrypted=y
          CONFIG_PACKAGE_kmod-keys-trusted=y
          CONFIG_PACKAGE_kmod-lib-raid6=y
          CONFIG_PACKAGE_kmod-lib-xor=y
          CONFIG_PACKAGE_kmod-lib-zstd=y
          CONFIG_PACKAGE_kmod-md-mod=y
          CONFIG_PACKAGE_kmod-md-raid0=y
          CONFIG_PACKAGE_kmod-md-raid1=y
          CONFIG_PACKAGE_kmod-md-raid10=y
          CONFIG_PACKAGE_kmod-nf-ipvs=y
          CONFIG_PACKAGE_kmod-nf-nat6=y
          CONFIG_PACKAGE_kmod-oid-registry=y
          CONFIG_PACKAGE_kmod-random-core=y
          CONFIG_PACKAGE_kmod-sit=y
          CONFIG_PACKAGE_kmod-tpm=y
          CONFIG_PACKAGE_kmod-veth=y
          CONFIG_PACKAGE_libatomic=y
          CONFIG_PACKAGE_libattr=y
          CONFIG_PACKAGE_libbsd=y
          CONFIG_PACKAGE_libbz2=y
          CONFIG_PACKAGE_libcap-bin=y
          CONFIG_PACKAGE_libcap-bin-capsh-shell="/bin/sh"
          CONFIG_PACKAGE_libdb47=y
          CONFIG_PACKAGE_libevent2=y
          CONFIG_PACKAGE_libffi=y
          CONFIG_PACKAGE_libgd=y
          CONFIG_PACKAGE_libgdbm=y
          CONFIG_PACKAGE_libjpeg-turbo=y
          CONFIG_PACKAGE_liblua5.3=y
          CONFIG_PACKAGE_liblzma=y
          CONFIG_PACKAGE_liblzo=y
          CONFIG_PACKAGE_libnettle=y
          CONFIG_PACKAGE_libnghttp2=y
          CONFIG_PACKAGE_libpcap=y
          CONFIG_PACKAGE_libpcre2=y
          CONFIG_PACKAGE_libpng=y
          CONFIG_PACKAGE_libpython3=y
          CONFIG_PACKAGE_libruby=y
          CONFIG_PACKAGE_libsqlite3=y
          CONFIG_PACKAGE_libwebp=y
          CONFIG_PACKAGE_libyaml=y
          CONFIG_PACKAGE_libyaml-cpp=y
          # CONFIG_PACKAGE_luci-app-accesscontrol is not set
          # CONFIG_PACKAGE_luci-app-adbyby-plus is not set
          CONFIG_PACKAGE_luci-app-adguardhome=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_btrfs_progs=y
          CONFIG_PACKAGE_luci-app-diskman_INCLUDE_mdadm=y
          CONFIG_PACKAGE_luci-app-mwan3=y
          CONFIG_PACKAGE_luci-app-mwan3helper=y
          CONFIG_PACKAGE_luci-app-openclash=y
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-ng is not set
          # CONFIG_PACKAGE_luci-app-rclone_INCLUDE_rclone-webui is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic is not set
          # CONFIG_PACKAGE_luci-app-unblockmusic_INCLUDE_UnblockNeteaseMusic_Go is not set
          CONFIG_PACKAGE_luci-app-uugamebooster=y
          # CONFIG_PACKAGE_luci-app-zerotier is not set
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-i18n-mwan3-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-mwan3helper-zh-cn=y
          CONFIG_PACKAGE_luci-i18n-uugamebooster-zh-cn=y
          CONFIG_PACKAGE_luci-proto-ipv6=y
          CONFIG_PACKAGE_luci-theme-argon-mod=y
          CONFIG_PACKAGE_mdadm=y
          CONFIG_PACKAGE_mount-utils=y
          CONFIG_PACKAGE_mwan3=y
          CONFIG_PACKAGE_odhcp6c=y
          CONFIG_PACKAGE_odhcp6c_ext_cer_id=0
          CONFIG_PACKAGE_odhcpd-ipv6only=y
          CONFIG_PACKAGE_odhcpd_ipv6only_ext_cer_id=0
          CONFIG_PACKAGE_python3=y
          CONFIG_PACKAGE_python3-asyncio=y
          CONFIG_PACKAGE_python3-base=y
          CONFIG_PACKAGE_python3-cgi=y
          CONFIG_PACKAGE_python3-cgitb=y
          CONFIG_PACKAGE_python3-codecs=y
          CONFIG_PACKAGE_python3-ctypes=y
          CONFIG_PACKAGE_python3-dbm=y
          CONFIG_PACKAGE_python3-decimal=y
          CONFIG_PACKAGE_python3-distutils=y
          CONFIG_PACKAGE_python3-email=y
          CONFIG_PACKAGE_python3-gdbm=y
          CONFIG_PACKAGE_python3-light=y
          CONFIG_PACKAGE_python3-logging=y
          CONFIG_PACKAGE_python3-lzma=y
          CONFIG_PACKAGE_python3-multiprocessing=y
          CONFIG_PACKAGE_python3-ncurses=y
          CONFIG_PACKAGE_python3-openssl=y
          CONFIG_PACKAGE_python3-pydoc=y
          CONFIG_PACKAGE_python3-readline=y
          CONFIG_PACKAGE_python3-sqlite3=y
          CONFIG_PACKAGE_python3-unittest=y
          CONFIG_PACKAGE_python3-urllib=y
          CONFIG_PACKAGE_python3-xml=y
          CONFIG_PACKAGE_ruby=y
          CONFIG_PACKAGE_ruby-bigdecimal=y
          CONFIG_PACKAGE_ruby-date=y
          CONFIG_PACKAGE_ruby-digest=y
          CONFIG_PACKAGE_ruby-enc=y
          CONFIG_PACKAGE_ruby-forwardable=y
          CONFIG_PACKAGE_ruby-pstore=y
          CONFIG_PACKAGE_ruby-psych=y
          CONFIG_PACKAGE_ruby-stringio=y
          CONFIG_PACKAGE_ruby-strscan=y
          CONFIG_PACKAGE_ruby-yaml=y
          CONFIG_PACKAGE_subconverter=y
          CONFIG_PACKAGE_tcpdump=y
          CONFIG_PACKAGE_umdns=y
          CONFIG_PACKAGE_unzip=y
          CONFIG_PACKAGE_uugamebooster=y
          CONFIG_PACKAGE_wireless-regdb=y
          CONFIG_PACKAGE_wpad-openssl=y
          CONFIG_PCRE2_JIT_ENABLED=y
          CONFIG_SQLITE3_DYNAMIC_EXTENSIONS=y
          CONFIG_SQLITE3_FTS3=y
          CONFIG_SQLITE3_FTS4=y
          CONFIG_SQLITE3_FTS5=y
          CONFIG_SQLITE3_JSON1=y
          CONFIG_SQLITE3_RTREE=y
          CONFIG_TARGET_EXT4_BLOCKSIZE=4096
          CONFIG_TARGET_EXT4_BLOCKSIZE_4K=y
          CONFIG_TARGET_EXT4_RESERVED_PCT=0
          CONFIG_TARGET_KERNEL_PARTSIZE=32
          CONFIG_TARGET_ROOTFS_EXT4FS=y
          CONFIG_TARGET_ROOTFS_PARTSIZE=1024
          # CONFIG_TARGET_ROOTFS_SQUASHFS is not set
          CONFIG_TARGET_ROOTFS_TARGZ=y
          # CONFIG_VMDK_IMAGES is not set
          CONFIG_WPA_MSG_MIN_PRIORITY=3
          CONFIG_PACKAGE_UnblockNeteaseMusic-Go=y
          CONFIG_PACKAGE_adbyby=y
          # CONFIG_PACKAGE_kmod-inet-diag is not set
          CONFIG_PACKAGE_libminiupnpc=y
          CONFIG_PACKAGE_libnatpmp=y
          CONFIG_PACKAGE_zerotier=y
          # CONFIG_ZEROTIER_ENABLE_DEBUG is not set
          # CONFIG_ZEROTIER_ENABLE_SELFTEST is not set

          EOF

          #
          # ===============================================================
          # 

          sed -i 's/^[ \t]*//g' ./.config
          make defconfig

      - name: Make download
        run: |
          make download -j8 || make download -j1 V=s
          rm -rf $(find ./dl/ -size -1024c)
          df -h

      - name: Compile firmware
        run: |
          export PATH=$PATH:$(go env GOPATH)/bin
          make -j$(nproc) || make -j1 V=s
          echo "======================="
          echo "Space usage:"
          echo "======================="
          df -h
          echo "======================="
          du -h ./ --max-depth=1
          du -h /mnt/openwrt/ --max-depth=1 || true

      - name: Prepare artifact
        run: |
          mkdir -p ./artifact/firmware
          mkdir -p ./artifact/package
          mkdir -p ./artifact/buildinfo
          rm -rf $(find ./bin/targets/ -type d -name "packages")
          cp -rf $(find ./bin/targets/ -type f) ./artifact/firmware/
          cp -rf $(find ./bin/packages/ -type f -name "*.ipk") ./artifact/package/
          cp -rf $(find ./bin/targets/ -type f -name "*.buildinfo" -o -name "*.manifest") ./artifact/buildinfo/

      - name: Deliver buildinfo
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_buildinfo
          path: ./artifact/buildinfo/

      - name: Deliver package
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_package
          path: ./artifact/package/

      - name: Deliver firmware
        uses: actions/upload-artifact@v2
        with:
          name: OpenWrt_firmware
          path: ./bin/targets/

      - name: Upload release asset
        if: github.event == 'release'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.YOURTOKEN }}
          file: ./artifact/firmware/*
          tag: ${{ github.ref }}
          file_glob: true
